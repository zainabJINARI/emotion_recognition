# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'LoadingPage_Python.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import tensorflow as tf
from tensorflow import keras
from keras.models import load_model
from time import sleep
from keras.utils import img_to_array
from keras.preprocessing import image
import cv2
import numpy as np
import sys
import cv2 
from deepface import DeepFace 
import matplotlib.pyplot as plt
from PyQt5 import QtCore, QtGui, QtWidgets
import ressources
from PyQt5.QtWidgets import QMainWindow, QFileDialog
from PyQt5.QtGui import QPixmap
face_classifier = cv2.CascadeClassifier(r'C:\Users\zineb\Documents\Emotion_Detection_CNN-main\haarcascade_frontalface_default.xml')
classifier =load_model(r'C:\Users\zineb\Documents\Emotion_Detection_CNN-main\model.h5')
emotion_labels = ['Angry','Disgust','Fear','Happy','Neutral', 'Sad', 'Surprise']
class Ui_LoadingPage(object):
    def setupUi(self, LoadingPage):
        LoadingPage.setObjectName("LoadingPage")
        LoadingPage.resize(1065, 615)
        self.centralwidget = QtWidgets.QWidget(LoadingPage)
        self.centralwidget.setObjectName("centralwidget")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(-1, -1, 1061, 611))
        self.widget.setObjectName("widget")
        self.label = QtWidgets.QLabel(self.widget)
        self.label.setGeometry(QtCore.QRect(4, 5, 1061, 601))
        self.label.setStyleSheet("border-image: url(:/images/emotion.png);\n"
"border-radius:30px")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.widget)
        self.label_2.setGeometry(QtCore.QRect(84, 55, 921, 461))
        self.label_2.setStyleSheet("background-color:rgba(0,0,0,100);\n"
"border-radius:20px;\n"
"\n"
"")
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.widget)
        self.label_3.setGeometry(QtCore.QRect(120, 100, 861, 131))
        self.label_3.setStyleSheet("text-shadow: -5px 4px \"#90e0ef\";\n"
"font-size:35px;\n"
"font-weight: 800;\n"
"color:rgb(144,224,239)")
        self.label_3.setTextFormat(QtCore.Qt.RichText)
        self.label_3.setScaledContents(False)
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setIndent(-7)
        self.label_3.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.widget)
        self.label_4.setGeometry(QtCore.QRect(100, 440, 391, 61))
        self.label_4.setStyleSheet("text-shadow: -5px 4px \"#90e0ef\";\n"
"font-size:20px;\n"
"font-weight: 800;\n"
"color:rgb(144,224,239)")
        self.label_4.setTextFormat(QtCore.Qt.RichText)
        self.label_4.setScaledContents(False)
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setIndent(-7)
        self.label_4.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.widget)
        self.label_5.setGeometry(QtCore.QRect(640, 440, 351, 61))
        self.label_5.setStyleSheet("text-shadow: -5px 4px \"#90e0ef\";\n"
"font-size:20px;\n"
"font-weight: 800;\n"
"color:rgb(144,224,239)")
        self.label_5.setTextFormat(QtCore.Qt.RichText)
        self.label_5.setScaledContents(False)
        self.label_5.setAlignment(QtCore.Qt.AlignCenter)
        self.label_5.setIndent(-7)
        self.label_5.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.label_5.setObjectName("label_5")
        self.progressBar = QtWidgets.QProgressBar(self.widget)
        self.progressBar.setGeometry(QtCore.QRect(260, 540, 631, 20))
        self.progressBar.setStyleSheet("QProgressBar{\n"
"    \n"
"    background-color: rgb(170, 255, 255);\n"
"    text-align:center;\n"
"    border-radius:10px;\n"
"    border-style:none;\n"
"}\n"
"QProgressBar::chunk{\n"
"   background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:   0.253731 rgba(0, 0, 70, 255), stop:1 rgba(154,     225, 245, 255));\n"
"  border-radius:10px;\n"
"}")
        self.progressBar.setProperty("value", 24)
        self.progressBar.setObjectName("progressBar")
        self.label_6 = QtWidgets.QLabel(self.widget)
        self.label_6.setGeometry(QtCore.QRect(490, 570, 191, 21))
        self.label_6.setStyleSheet("text-shadow: -5px 4px \"#90e0ef\";\n"
"font-size:15px;\n"
"font-weight: 800;\n"
"color:rgb(144,224,239)")
        self.label_6.setTextFormat(QtCore.Qt.RichText)
        self.label_6.setScaledContents(False)
        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
        self.label_6.setIndent(-7)
        self.label_6.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.label_6.setObjectName("label_6")
        LoadingPage.setCentralWidget(self.centralwidget)

        self.retranslateUi(LoadingPage)
        QtCore.QMetaObject.connectSlotsByName(LoadingPage)

    def retranslateUi(self, LoadingPage):
        _translate = QtCore.QCoreApplication.translate
        LoadingPage.setWindowTitle(_translate("LoadingPage", "MainWindow"))
        self.label.setText(_translate("LoadingPage", "TextLabel"))
        self.label_2.setText(_translate("LoadingPage", "TextLabel"))
        self.label_3.setText(_translate("LoadingPage", "Image Processing Project :  Emotion  Recognition "))
        self.label_4.setText(_translate("LoadingPage", "Mentored By Dr.Meyam El Mouhtadi"))
        self.label_5.setText(_translate("LoadingPage", "Created By Zainab JINARI"))
        self.label_6.setText(_translate("LoadingPage", "Loading..."))

class Ui_MenuPage2(object):
    def setupUi(self, MenuPage2):
        MenuPage2.setObjectName("MenuPage2")
        MenuPage2.resize(1031, 601)
        MenuPage2.setStyleSheet("QPushButton#pushButtonImage{\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.253731 rgba(0, 0, 70, 255), stop:1 rgba(154,     225, 245, 255));\n"
"color:rgba(255,255,255,210);\n"
"border-radius:5px;\n"
"}\n"
"QPushButton#pushButtonImage:hover{\n"
"background-color: rgba(0, 0, 70, 255);\n"
"color:rgba(154,     225, 245, 255);\n"
"border-radius:5px;\n"
"border-color:rgba(154, 225, 245, 255);\n"
"border-style:solid;\n"
"}\n"
"QPushButton#pushButtonImage:pressed{\n"
"padding-left:5px;\n"
"padding-top:5px;\n"
"}\n"
"QPushButton#pushButtonVideo{\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.253731 rgba(0, 0, 70, 255), stop:1 rgba(154,     225, 245, 255));\n"
"color:rgba(255,255,255,210);\n"
"border-radius:5px;\n"
"}\n"
"QPushButton#pushButtonVideo:hover{\n"
"background-color: rgba(0, 0, 70, 255);\n"
"color:rgba(154,     225, 245, 255);\n"
"border-radius:5px;\n"
"border-color:rgba(154, 225, 245, 255);\n"
"border-style:solid;\n"
"}\n"
"QPushButton#pushButtonVideo:pressed{\n"
"padding-left:5px;\n"
"padding-top:5px;\n"
"}\n"
"QPushButton#pushButtonReal{\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.253731 rgba(0, 0, 70, 255), stop:1 rgba(154,     225, 245, 255));\n"
"color:rgba(255,255,255,210);\n"
"border-radius:5px;\n"
"}\n"
"QPushButton#pushButtonReal:hover{\n"
"background-color: rgba(0, 0, 70, 255);\n"
"color:rgba(154,     225, 245, 255);\n"
"border-radius:5px;\n"
"border-color:rgba(154, 225, 245, 255);\n"
"border-style:solid;\n"
"}\n"
"QPushButton#pushButtonReal:pressed{\n"
"padding-left:5px;\n"
"padding-top:5px;\n"
"}\n"
"")
        self.centralwidget = QtWidgets.QWidget(MenuPage2)
        self.centralwidget.setObjectName("centralwidget")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(0, 0, 1031, 591))
        self.widget.setObjectName("widget")
        self.widget_2 = QtWidgets.QWidget(self.widget)
        self.widget_2.setGeometry(QtCore.QRect(-1, -1, 1031, 591))
        self.widget_2.setObjectName("widget_2")
        self.label = QtWidgets.QLabel(self.widget_2)
        self.label.setGeometry(QtCore.QRect(4, 5, 1031, 571))
        self.label.setStyleSheet("border-image: url(:/images/emotion.png);\n"
"border-radius:20px")
        self.label.setText("")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.widget_2)
        self.label_2.setGeometry(QtCore.QRect(50, 40, 921, 481))
        self.label_2.setStyleSheet("background-color:rgba(0,0,0,170);\n"
"border-radius:20px;")
        self.label_2.setText("")
        self.label_2.setObjectName("label_2")
        self.label_5 = QtWidgets.QLabel(self.widget_2)
        self.label_5.setGeometry(QtCore.QRect(160, 80, 681, 71))
        font = QtGui.QFont()
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(99)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("text-shadow: -5px 4px \"#90e0ef\";\n"
"font-size:25px;\n"
"font-weight: 800;\n"
"color:rgb(144,224,239)")
        self.label_5.setTextFormat(QtCore.Qt.RichText)
        self.label_5.setScaledContents(False)
        self.label_5.setAlignment(QtCore.Qt.AlignCenter)
        self.label_5.setIndent(-7)
        self.label_5.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.label_5.setObjectName("label_5")
        self.pushButtonImage = QtWidgets.QPushButton(self.widget_2)
        self.pushButtonImage.setGeometry(QtCore.QRect(310, 260, 400, 40))
        font = QtGui.QFont()
        font.setFamily("MS Serif")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.pushButtonImage.setFont(font)
        self.pushButtonImage.setObjectName("pushButtonImage")
        #self.pushButtonVideo = QtWidgets.QPushButton(self.widget_2)
        #self.pushButtonVideo.setGeometry(QtCore.QRect(310, 310, 400, 40))
        font = QtGui.QFont()
        font.setFamily("MS Serif")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        #self.pushButtonVideo.setFont(font)
        #self.pushButtonVideo.setObjectName("pushButtonVideo")
        self.pushButtonReal = QtWidgets.QPushButton(self.widget_2)
        self.pushButtonReal.setGeometry(QtCore.QRect(310, 400, 400, 40))
        font = QtGui.QFont()
        font.setFamily("MS Serif")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.pushButtonReal.setFont(font)
        self.pushButtonReal.setObjectName("pushButtonReal")
        MenuPage2.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MenuPage2)
        self.statusbar.setObjectName("statusbar")
        MenuPage2.setStatusBar(self.statusbar)

        self.retranslateUi(MenuPage2)
        QtCore.QMetaObject.connectSlotsByName(MenuPage2)

    def retranslateUi(self, MenuPage2):
        _translate = QtCore.QCoreApplication.translate
        MenuPage2.setWindowTitle(_translate("MenuPage2", "MainWindow"))
        self.label_5.setText(_translate("MenuPage2", "Image Processing : Emotion  Recognition"))
        self.pushButtonImage.setText(_translate("MenuPage2", "Emotion Recognition On Image "))
        #self.pushButtonVideo.setText(_translate("MenuPage2", "Emotion Recognition On Video "))
        self.pushButtonReal.setText(_translate("MenuPage2", "Real Time Emotion Recognition "))
        
        
        
class Ui_ImageRecognition(object):
    def setupUi(self, ImageRecognition):
        ImageRecognition.setObjectName("ImageRecognition")
        ImageRecognition.resize(1031, 601)
        ImageRecognition.setStyleSheet("QPushButton#Load_Image{\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.253731 rgba(0, 0, 70, 255), stop:1 rgba(154,     225, 245, 255));\n"
"color:rgba(255,255,255,210);\n"
"border-radius:5px;\n"
"}\n"
"QPushButton#Load_Image:hover{\n"
"background-color: rgba(0, 0, 70, 255);\n"
"color:rgba(154,     225, 245, 255);\n"
"border-radius:5px;\n"
"border-color:rgba(154, 225, 245, 255);\n"
"border-style:solid;\n"
"}\n"
"QPushButton#Load_Image:pressed{\n"
"padding-left:5px;\n"
"padding-top:5px;\n"
"}\n"
"QPushButton#Detect_Face{\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.253731 rgba(0, 0, 70, 255), stop:1 rgba(154,     225, 245, 255));\n"
"color:rgba(255,255,255,210);\n"
"border-radius:5px;\n"
"}\n"
"QPushButton#Detect_Face:hover{\n"
"background-color: rgba(0, 0, 70, 255);\n"
"color:rgba(154,     225, 245, 255);\n"
"border-radius:5px;\n"
"border-color:rgba(154, 225, 245, 255);\n"
"border-style:solid;\n"
"}\n"
"QPushButton#Detect_Face:pressed{\n"
"padding-left:5px;\n"
"padding-top:5px;\n"
"}\n"
"QPushButton#Recognize_Emotion{\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.253731 rgba(0, 0, 70, 255), stop:1 rgba(154,     225, 245, 255));\n"
"color:rgba(255,255,255,210);\n"
"border-radius:5px;\n"
"}\n"
"QPushButton#Recognize_Emotion:hover{\n"
"background-color: rgba(0, 0, 70, 255);\n"
"color:rgba(154,     225, 245, 255);\n"
"border-radius:5px;\n"
"border-color:rgba(154, 225, 245, 255);\n"
"border-style:solid;\n"
"}\n"
"QPushButton#Recognize_Emotion:pressed{\n"
"padding-left:5px;\n"
"padding-top:5px;\n"
"}\n"
"QPushButton#Back{\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.253731 rgba(0, 0, 70, 255), stop:1 rgba(154,     225, 245, 255));\n"
"color:rgba(255,255,255,210);\n"
"border-radius:5px;\n"
"}\n"
"QPushButton#Back:hover{\n"
"background-color: rgba(0, 0, 70, 255);\n"
"color:rgba(154,     225, 245, 255);\n"
"border-radius:5px;\n"
"border-color:rgba(154, 225, 245, 255);\n"
"border-style:solid;\n"
"}\n"
"QPushButton#Back:pressed{\n"
"padding-left:5px;\n"
"padding-top:5px;\n"
"}")
        self.centralwidget = QtWidgets.QWidget(ImageRecognition)
        self.centralwidget.setObjectName("centralwidget")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(-1, -1, 1031, 591))
        self.widget.setObjectName("widget")
        self.label = QtWidgets.QLabel(self.widget)
        self.label.setGeometry(QtCore.QRect(4, 5, 1021, 591))
        self.label.setStyleSheet("border-image: url(:/images/emotion.png);\n"
"border-radius:20px;")
        self.label.setText("")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.widget)
        self.label_2.setGeometry(QtCore.QRect(40, 30, 961, 521))
        self.label_2.setStyleSheet("background-color:rgba(0,0,0,100);\n"
"border-radius:20px;\n"
"\n"
"")
        self.label_2.setText("")
        self.label_2.setObjectName("label_2")
        self.Load_Image = QtWidgets.QPushButton(self.widget)
        self.Load_Image.setGeometry(QtCore.QRect(90, 80, 200, 50))
        self.label_3=QtWidgets.QLabel(self.widget)
        self.label_3.setGeometry(QtCore.QRect(100,500,800,50))
        self.label_3.setStyleSheet("text-shadow: -5px 4px \"#90e0ef\";\n"
"font-size:20px;\n"
"font-weight: 800;\n"
"color:rgb(144,224,239)")
        self.label_3.setTextFormat(QtCore.Qt.RichText)
        self.label_3.setScaledContents(False)
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setIndent(-7)
        self.label_3.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.label_3.setObjectName("label_3")
        self.label_3.setText("")
        font = QtGui.QFont()
        font.setFamily("MS Serif")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.Load_Image.setFont(font)
        self.Load_Image.setObjectName("Load_Image")
        self.Detect_Face = QtWidgets.QPushButton(self.widget)
        self.Detect_Face.setGeometry(QtCore.QRect(90, 200, 200, 50))
        font = QtGui.QFont()
        font.setFamily("MS Serif")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.Detect_Face.setFont(font)
        self.Detect_Face.setObjectName("Detect_Face")
        self.Recognize_Emotion = QtWidgets.QPushButton(self.widget)
        self.Recognize_Emotion.setGeometry(QtCore.QRect(90, 320, 200, 50))
        font = QtGui.QFont()
        font.setFamily("MS Serif")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.Recognize_Emotion.setFont(font)
        self.Recognize_Emotion.setObjectName("Recognize_Emotion")
        self.Back = QtWidgets.QPushButton(self.widget)
        self.Back.setGeometry(QtCore.QRect(90, 430, 200, 50))
        font = QtGui.QFont()
        font.setFamily("MS Serif")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.Back.setFont(font)
        self.Back.setObjectName("Back")
        self.image_loaded = QtWidgets.QLabel(self.widget)
        self.image_loaded.setGeometry(QtCore.QRect(350, 70, 621, 421))
        self.image_loaded.setStyleSheet("background-color:rgba(0,0,0,150);\n"
"border-radius:20px;\n"
"")
        self.image_loaded.setText("")
        self.image_loaded.setObjectName("image_loaded")
        ImageRecognition.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(ImageRecognition)
        self.statusbar.setObjectName("statusbar")
        ImageRecognition.setStatusBar(self.statusbar)

        self.retranslateUi(ImageRecognition)
        QtCore.QMetaObject.connectSlotsByName(ImageRecognition)

    def retranslateUi(self, ImageRecognition):
        _translate = QtCore.QCoreApplication.translate
        ImageRecognition.setWindowTitle(_translate("ImageRecognition", "MainWindow"))
        self.Load_Image.setText(_translate("ImageRecognition", "Load Image"))
        self.Detect_Face.setText(_translate("ImageRecognition", "Detect Face"))
        self.Recognize_Emotion.setText(_translate("ImageRecognition", "Recognize Emotion "))
        self.Back.setText(_translate("ImageRecognition", "Back"))
class Ui_Recognition_Video(object):
    def setupUi(self, Recognition_Video):
        Recognition_Video.setObjectName("Recognition_Video")
        Recognition_Video.resize(1031, 601)
        Recognition_Video.setStyleSheet("QPushButton#Load_Video{\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.253731 rgba(0, 0, 70, 255), stop:1 rgba(154,     225, 245, 255));\n"
"color:rgba(255,255,255,210);\n"
"border-radius:5px;\n"
"}\n"
"QPushButton#Load_Video:hover{\n"
"background-color: rgba(0, 0, 70, 255);\n"
"color:rgba(154,     225, 245, 255);\n"
"border-radius:5px;\n"
"border-color:rgba(154, 225, 245, 255);\n"
"border-style:solid;\n"
"}\n"
"QPushButton#Load_Video:pressed{\n"
"padding-left:5px;\n"
"padding-top:5px;\n"
"}\n"
"QPushButton#Detect_Face{\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.253731 rgba(0, 0, 70, 255), stop:1 rgba(154,     225, 245, 255));\n"
"color:rgba(255,255,255,210);\n"
"border-radius:5px;\n"
"}\n"
"QPushButton#Detect_Face:hover{\n"
"background-color: rgba(0, 0, 70, 255);\n"
"color:rgba(154,     225, 245, 255);\n"
"border-radius:5px;\n"
"border-color:rgba(154, 225, 245, 255);\n"
"border-style:solid;\n"
"}\n"
"QPushButton#Detect_Face:pressed{\n"
"padding-left:5px;\n"
"padding-top:5px;\n"
"}\n"
"QPushButton#Recognize_Emotion{\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.253731 rgba(0, 0, 70, 255), stop:1 rgba(154,     225, 245, 255));\n"
"color:rgba(255,255,255,210);\n"
"border-radius:5px;\n"
"}\n"
"QPushButton#Recognize_Emotion:hover{\n"
"background-color: rgba(0, 0, 70, 255);\n"
"color:rgba(154,     225, 245, 255);\n"
"border-radius:5px;\n"
"border-color:rgba(154, 225, 245, 255);\n"
"border-style:solid;\n"
"}\n"
"QPushButton#Recognize_Emotion:pressed{\n"
"padding-left:5px;\n"
"padding-top:5px;\n"
"}\n"
"QPushButton#Back{\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.253731 rgba(0, 0, 70, 255), stop:1 rgba(154,     225, 245, 255));\n"
"color:rgba(255,255,255,210);\n"
"border-radius:5px;\n"
"}\n"
"QPushButton#Back:hover{\n"
"background-color: rgba(0, 0, 70, 255);\n"
"color:rgba(154,     225, 245, 255);\n"
"border-radius:5px;\n"
"border-color:rgba(154, 225, 245, 255);\n"
"border-style:solid;\n"
"}\n"
"QPushButton#Back:pressed{\n"
"padding-left:5px;\n"
"padding-top:5px;\n"
"}")
        self.centralwidget = QtWidgets.QWidget(Recognition_Video)
        self.centralwidget.setObjectName("centralwidget")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(-1, -1, 1031, 591))
        self.widget.setObjectName("widget")
        self.label = QtWidgets.QLabel(self.widget)
        self.label.setGeometry(QtCore.QRect(4, 5, 1031, 591))
        self.label.setStyleSheet("border-image: url(:/images/emotion.png);\n"
"border-radius:20px;")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.widget)
        self.label_2.setGeometry(QtCore.QRect(64, 45, 941, 471))
        self.label_2.setStyleSheet("background-color:rgba(0,0,0,100);\n"
"border-radius:20px;\n"
"\n"
"")
        self.label_2.setObjectName("label_2")
        self.Load_Video = QtWidgets.QPushButton(self.widget)
        self.Load_Video.setGeometry(QtCore.QRect(110, 80, 200, 50))
        font = QtGui.QFont()
        font.setFamily("MS Serif")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.Load_Video.setFont(font)
        self.Load_Video.setObjectName("Load_Video")
        self.Detect_Face = QtWidgets.QPushButton(self.widget)
        self.Detect_Face.setGeometry(QtCore.QRect(110, 200, 200, 50))
        font = QtGui.QFont()
        font.setFamily("MS Serif")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.Detect_Face.setFont(font)
        self.Detect_Face.setObjectName("Detect_Face")
        self.Recognize_Emotion = QtWidgets.QPushButton(self.widget)
        self.Recognize_Emotion.setGeometry(QtCore.QRect(110, 320, 200, 50))
        font = QtGui.QFont()
        font.setFamily("MS Serif")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.Recognize_Emotion.setFont(font)
        self.Recognize_Emotion.setObjectName("Recognize_Emotion")
        self.Back = QtWidgets.QPushButton(self.widget)
        self.Back.setGeometry(QtCore.QRect(110, 430, 200, 50))
        font = QtGui.QFont()
        font.setFamily("MS Serif")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.Back.setFont(font)
        self.Back.setObjectName("Back")
        self.video_loaded = QtWidgets.QLabel(self.widget)
        self.video_loaded.setGeometry(QtCore.QRect(340, 70, 651, 431))
        self.video_loaded.setStyleSheet("background-color:rgba(0,0,0,150);\n"
"border-radius:20px;\n"
"")
        self.video_loaded.setText("")
        self.video_loaded.setObjectName("video_loaded")
        Recognition_Video.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(Recognition_Video)
        self.statusbar.setObjectName("statusbar")
        Recognition_Video.setStatusBar(self.statusbar)

        self.retranslateUi(Recognition_Video)
        QtCore.QMetaObject.connectSlotsByName(Recognition_Video)

    def retranslateUi(self, Recognition_Video):
        _translate = QtCore.QCoreApplication.translate
        Recognition_Video.setWindowTitle(_translate("Recognition_Video", "MainWindow"))
        self.label.setText(_translate("Recognition_Video", "TextLabel"))
        self.label_2.setText(_translate("Recognition_Video", "TextLabel"))
        self.Load_Video.setText(_translate("Recognition_Video", "Load Video"))
        self.Detect_Face.setText(_translate("Recognition_Video", "Detect Face"))
        self.Recognize_Emotion.setText(_translate("Recognition_Video", "Recognize Emotion "))
        self.Back.setText(_translate("Recognition_Video", "Back"))



        
class LoadingPage(QtWidgets.QMainWindow):
    def __init__(self):
        super().__init__()
        self.ui = Ui_LoadingPage()
        self.ui.setupUi(self)

        # Add a timer to update the progress bar
        self.timer = QtCore.QTimer()
        self.timer.timeout.connect(self.update_progress_bar)
        self.timer.start(100)  # Timer interval in milliseconds
        self.progress_value = 0

    def update_progress_bar(self):
        self.progress_value += 1
        self.ui.progressBar.setValue(self.progress_value)
        if self.progress_value >= 100:
            self.timer.stop()
            self.open_main_menu()

    def open_main_menu(self):
        self.main_menu = MainMenu()
        self.main_menu.show()
        self.close()

class MainMenu(QtWidgets.QMainWindow):
    def __init__(self):
        super().__init__()
        self.ui = Ui_MenuPage2()
        self.ui.setupUi(self)
        self.ui.pushButtonImage.clicked.connect(self.on_pushButtonImage_clicked)
        #self.ui.pushButtonVideo.clicked.connect(self.on_pushButtonVideo_clicked)
        self.ui.pushButtonReal.clicked.connect(self.on_pushButtonRealTime_clicked)
    def on_pushButtonImage_clicked(self):
        # Add your code here to handle the button click event
        self.image_window = ImageRecognitionPage()
        self.image_window.show()
        self.close()
    def on_pushButtonVideo_clicked(self):
        # Add your code here to handle the button click event
        self.video_window = VideoRecognitionPage()
        self.video_window.show()
        self.close()  
    def on_pushButtonRealTime_clicked(self):
        # Add your code here to handle the button click event
        self.close()     
        cap = cv2.VideoCapture(0)
        while True:
                _, frame = cap.read()
                gray = cv2.cvtColor(frame,cv2.COLOR_BGR2GRAY)
                faces = face_classifier.detectMultiScale(gray)

                for (x,y,w,h) in faces:
                    cv2.rectangle(frame,(x,y),(x+w,y+h),(0,255,255),2)
                    roi_gray = gray[y:y+h,x:x+w]
                    roi_gray = cv2.resize(roi_gray,(48,48),interpolation=cv2.INTER_AREA)



                    if np.sum([roi_gray])!=0:
                        roi = roi_gray.astype('float')/255.0
                        roi = img_to_array(roi)
                        roi = np.expand_dims(roi,axis=0)

                        prediction = classifier.predict(roi)[0]
                        label=emotion_labels[prediction.argmax()]
                        label_position = (x,y)
                        cv2.putText(frame,label,label_position,cv2.FONT_HERSHEY_SIMPLEX,1,(0,255,0),2)
                    else:
                        cv2.putText(frame,'No Faces',(30,80),cv2.FONT_HERSHEY_SIMPLEX,1,(0,255,0),2)
                cv2.imshow('Emotion Detector',frame)
                if cv2.waitKey(1) & 0xFF == ord('q'):
                        break
                if cv2.getWindowProperty('Emotion Detector', cv2.WND_PROP_VISIBLE) < 1:
                        break    

        cap.release()
        cv2.destroyAllWindows()   
class ImageRecognitionPage(QtWidgets.QMainWindow):
    def __init__(self):
        super(ImageRecognitionPage, self).__init__()
        self.ui = Ui_ImageRecognition()
        self.ui.setupUi(self)
        self.ui.Back.clicked.connect(self.return_Back)
        self.ui.Load_Image.clicked.connect(self.load_image)
        self.ui.Detect_Face.clicked.connect(self.detect_Face)
        self.ui.Recognize_Emotion.clicked.connect(self.recognize_Emotion)
    def return_Back(self):
        self.main_menu = MainMenu()
        self.main_menu.show()
        self.close()
    def load_image(self):
        global image_path
        file_dialog = QFileDialog()
        image_path, _ = file_dialog.getOpenFileName(self, "Choose Image", "", "Images (*.png *.xpm *.jpeg *.bmp)")
        if image_path:
            pixmap = QPixmap(image_path)
            self.ui.image_loaded.setPixmap(pixmap.scaled(self.ui.image_loaded.size(), aspectRatioMode=QtCore.Qt.KeepAspectRatio))  
    def detect_Face(self):
        global img
        global roi_gray
        print(image_path) 
        filename = image_path.split("/")[-1]
        img = cv2.imread(filename)
        faceCascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')
        gray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
        #printf(faceCascade.empty())
        #here we call the function that will detecte all the faces on the image  
        faces = faceCascade.detectMultiScale(gray,1.1,5)  
        #here we draw rectangles in each face which is detected 
        #2 is refering to the width of the ligne
        #(0, 255,0) because we take an GRB image for opencv 
        for(x, y, w, h) in faces:
            cv2.rectangle(img, (x,y), (x+w,y+h),(0, 255,0), 2)
            roi_gray = gray[y:y+h,x:x+w]
            roi_gray = cv2.resize(roi_gray,(48,48),interpolation=cv2.INTER_AREA) 
        rgb_img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
        # du BGR en RGB 
        rgb_img = rgb_img[..., ::-1]
        cv2.imwrite("happyy.jpeg", rgb_img)   
        pixmap = QPixmap("happyy.jpeg")    
        self.ui.image_loaded.setPixmap(pixmap.scaled(self.ui.image_loaded.size(), aspectRatioMode=QtCore.Qt.KeepAspectRatio)) 
        
        #print(img) 
        #plt.imshow(img)   
        #predictions = DeepFace.analyze(img) 
        #print(predictions)  
        
    def recognize_Emotion(self):
        global label
        if np.sum([roi_gray])!=0:
                        roi = roi_gray.astype('float')/255.0
                        roi = img_to_array(roi)
                        roi = np.expand_dims(roi,axis=0)

                        prediction = classifier.predict(roi)[0]
                        label=emotion_labels[prediction.argmax()]
        #predictions = DeepFace.analyze(img,enforce_detection=False) 
        #predictions=predictions[0]
        #predictions['dominant_emotion']
        self.ui.label_3.setText("The dominant emotion is : "+ label)
        print(label) 
class VideoRecognitionPage(QtWidgets.QMainWindow):
    def __init__(self):
        super(VideoRecognitionPage, self).__init__()
        self.ui = Ui_Recognition_Video()
        self.ui.setupUi(self)
        self.ui.Back.clicked.connect(self.return_Back)
        self.ui.Load_Video.clicked.connect(self.load_video)
        self.ui.Detect_Face.clicked.connect(self.detect_Face)
        self.ui.Recognize_Emotion.clicked.connect(self.recognize_Emotion)
    def return_Back(self):
        self.main_menu = MainMenu()
        self.main_menu.show()
        self.close()
    def load_video(self):
        print("load video") 
    def detect_Face(self):
        print("detect face ") 
        
    def recognize_Emotion(self):
        print("recognize emotion")           
def main():
    app = QtWidgets.QApplication([])
    loading_page = LoadingPage()
    loading_page.show()
    sys.exit(app.exec_())

if __name__ == "__main__":
    main()
